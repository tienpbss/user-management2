{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    },
    {
      "url": "https://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Hello word"
        ],
        "description": "Endpoint example",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login",
        "description": "User login",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/viewInfo": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "User view info ",
        "description": "End point for users to view their own information",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/editInfo": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "User update info",
        "description": "End point for users to edit their own information",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "firstName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  },
                  "dob": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  },
                  "cmnd": {
                    "example": "any"
                  },
                  "bhxh": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/editPassword": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "User update password",
        "description": "End point for users to edit their own password",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/updateAvatar": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "User update avatar",
        "description": "End point for users to upload their own avatar",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/getAvatar": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Return avatar for user",
        "description": "End point for users to view their own avatar",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/getAvatarUser/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get avatar user",
        "description": "End point for admin to view avatar of user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/getAllUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "End point for admin to view all user in system",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/getUser/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "description": "Endpoint for admin to view specific user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/addUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add new user",
        "description": "Endpoint for admin to add an user to system",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  },
                  "firstName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  },
                  "dob": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  },
                  "cmnd": {
                    "example": "any"
                  },
                  "bhxh": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  },
                  "roles": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/editUser/{userId}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Admin edit info of user",
        "description": "Endpoint for admin edit info of user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mnv": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "firstName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  },
                  "dob": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  },
                  "cmnd": {
                    "example": "any"
                  },
                  "bhxh": {
                    "example": "any"
                  },
                  "address": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/editPasswordUser/{userId}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Admin edit password of user",
        "description": "Endpoint for admin edit password of user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/editStatusUser/{userId}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Activate/deactivate user",
        "description": "true: activate user, false: deactivate user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/editRoleUser/{userId}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Set roles for user",
        "description": "Admin set roles for user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roles": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/getAllRoles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get all roles",
        "description": "Get all roles of system",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/roles/updateRole/{roleId}": {
      "patch": {
        "tags": [
          "Role"
        ],
        "summary": "Change info of role",
        "description": "Change name, description of role",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/setPermissions": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Set permissions for role",
        "description": "Set permission for role",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleName": {
                    "example": "any"
                  },
                  "permissions": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/viewDetail/{name}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get role by name",
        "description": "View detail(name, des, permission) of role",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/permissions/getAllPermissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get all permissions",
        "description": "Get all permissions",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/permissions/viewPermission/{permissionId}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get detail permission",
        "description": "Get detail(name, des) of permission",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/forms/createForm": {
      "post": {
        "tags": [
          "Form"
        ],
        "summary": "Create a new form",
        "description": "Create a new form",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "categoryId": {
                    "example": "any"
                  },
                  "dueDate": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/editInfoForm/{formId}": {
      "patch": {
        "tags": [
          "Form"
        ],
        "summary": "Edit an exist form",
        "description": "Edit an exist form",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dueDate": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/getAllForms": {
      "get": {
        "tags": [
          "Form"
        ],
        "summary": "Get all forms",
        "description": "Get all forms",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/forms/getForm/{formId}": {
      "get": {
        "tags": [
          "Form"
        ],
        "summary": "Get form by id",
        "description": "Get form by id",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/forms/setAllUsers/{formId}": {
      "post": {
        "tags": [
          "Form"
        ],
        "summary": "Set form for all user",
        "description": "Set form for all user",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/forms/setUsers/{formId}": {
      "post": {
        "tags": [
          "Form"
        ],
        "summary": "Set forms for specific users",
        "description": "Set forms for specific users",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIds": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/getUserOfForm/{formId}": {
      "get": {
        "tags": [
          "Form"
        ],
        "summary": "Get specific users of form",
        "description": "Get specific users of form",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/forms/deleteForm/{formId}": {
      "delete": {
        "tags": [
          "Form"
        ],
        "summary": "Delete form by id",
        "description": "Delete form by id",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/forms/closeForm/{formId}": {
      "post": {
        "tags": [
          "Form"
        ],
        "summary": "Close form",
        "description": "Close form",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/forms/openForm/{formId}": {
      "post": {
        "tags": [
          "Form"
        ],
        "summary": "Open form",
        "description": "Open form",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/forms/report/{formId}": {
      "get": {
        "tags": [
          "Form"
        ],
        "summary": "Report of a form",
        "description": "See users whose form is in new, pending, approval status. Pass status in query",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/formSubmits/viewAllForms": {
      "get": {
        "tags": [
          "FormSubmit"
        ],
        "summary": "User get all forms submit",
        "description": "User get all forms submit",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/formSubmits/viewForm/{formId}": {
      "get": {
        "tags": [
          "FormSubmit"
        ],
        "summary": "User get form submit by id",
        "description": "User get form submit by id",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/formSubmits/submit": {
      "post": {
        "tags": [
          "FormSubmit"
        ],
        "summary": "Submit form",
        "description": "User submit form",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "formId": {
                    "example": "any"
                  },
                  "tasks": {
                    "example": "any"
                  },
                  "user_comment": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/formSubmits/getFormSubmit/{formId}/{userId}": {
      "get": {
        "tags": [
          "FormSubmit"
        ],
        "summary": "Get a form submit of a user",
        "description": "Get a form submit of a user",
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/formSubmits/getAllFormSubmits": {
      "get": {
        "tags": [
          "FormSubmit"
        ],
        "summary": "Get all form submit",
        "description": "Get all form submit",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/formSubmits/approval": {
      "post": {
        "tags": [
          "FormSubmit"
        ],
        "summary": "Approval a form",
        "description": "Director approval form manager, manager approval form employee",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "example": "any"
                  },
                  "formId": {
                    "example": "any"
                  },
                  "manager_comment": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/formSubmits/reject": {
      "post": {
        "tags": [
          "FormSubmit"
        ],
        "summary": "Reject a form",
        "description": "Director reject form manager, manager reject form employee",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "example": "any"
                  },
                  "formId": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "mnv": {
            "type": "string",
            "example": "1691659696"
          },
          "avatar": {},
          "email": {
            "type": "string",
            "example": "json01@qa.team"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$HHRZlHNBsx04uUTnjNZuc.f6GiAFyt8N59vhG8h/mEd2idKz248gG"
          },
          "firstName": {
            "type": "string",
            "example": "ruri"
          },
          "lastName": {
            "type": "string",
            "example": "Ryu"
          },
          "dob": {
            "type": "string",
            "example": "2001-01-01"
          },
          "phone": {
            "type": "string",
            "example": "0123"
          },
          "cmnd": {
            "type": "string",
            "example": "004"
          },
          "bhxh": {
            "type": "string",
            "example": "003"
          },
          "address": {
            "type": "string",
            "example": "Hanoi"
          },
          "activate": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "mnv",
          "avatar",
          "email",
          "password",
          "firstName",
          "lastName",
          "dob",
          "phone",
          "cmnd",
          "bhxh",
          "address",
          "activate"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ADMIN"
          },
          "description": {
            "type": "string",
            "example": "admin of system"
          }
        },
        "required": [
          "name"
        ]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "CREATE_ROLE"
          },
          "description": {
            "type": "string",
            "example": "admin of system"
          }
        },
        "required": [
          "name"
        ]
      },
      "Form": {
        "type": "object",
        "properties": {
          "FormCategoryId": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Form of work report in July"
          },
          "description": {
            "type": "string",
            "example": "Progress of works in July"
          },
          "due_date": {
            "type": "string",
            "example": "2023-08-03"
          },
          "status": {
            "type": "string",
            "example": "OPEN"
          }
        },
        "required": [
          "FormCategoryId",
          "name",
          "description",
          "due_date",
          "status"
        ]
      },
      "FormSubmit": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "formId": {
            "type": "number",
            "example": 1
          },
          "userComment": {
            "type": "string",
            "example": "Done"
          },
          "managerComment": {
            "type": "string",
            "example": "Ok"
          },
          "status": {
            "type": "string",
            "example": "PENDING"
          },
          "tasks": {
            "$ref": "#/components/schemas/Task"
          }
        },
        "required": [
          "userId",
          "formId",
          "status"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Create codebase"
          },
          "result": {
            "type": "string",
            "example": "Done"
          }
        },
        "required": [
          "content",
          "result"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}